@model IEnumerable<DistribuidoraAPI.Models.ProductoStockViewModel>

@{
    ViewBag.Title = "Productos";
}

<div class="row">
    <div class="col-md-12">
        <h2>Listado de Productos</h2>
        <hr />
        <p>
            @Html.ActionLink("Crear Nuevo Producto", "Create", null, new { @class = "btn btn-outline btn-primary pull-left" })
            @Html.ActionLink("Volver al Inicio", "Index", "Home", null, new { @class = "btn btn-outline btn-warning pull-right" })
        </p>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        @if (Model.Count() > 0)
        {
            <hr />
            <table class="table table-striped table-bordered datatable" data-excel="true" data-pdf="true" data-imprimir="true">
                <thead>
                    <tr>
                        <th>
                            Codigo
                        </th>
                        <th>
                            Nombre
                        </th>
                        <th>
                            Costo
                        </th>
                        <th>
                            Minimo
                        </th>
                        <th>
                            Cantidad
                        </th>
                        <th>
                            Reservada
                        </th>
                        <th>
                            Disponible
                        </th>
                        <th>
                            Marca
                        </th>
                        <th>
                            Duracion
                        </th>
                        <th>
                            Rubro
                        </th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        var color = "";
                        decimal minimo = Convert.ToDecimal(item.oProducto.Minimo);
                        decimal cant = item.Cantidad;
                        if (minimo >= cant)
                        {
                            color = "red";
                        }
                        <tr style="color:@color">
                            <td>
                                @Html.DisplayFor(modelItem => item.oProducto.Codigo)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.oProducto.Nombre)
                            </td>
                            <td>
                                @{ string costo = item.oProducto.PrecioCosto.ToString().Replace(",", ".");
                                }
                                $@costo
                                @*@Html.DisplayFor(modelItem => item.oProducto.PrecioCosto)*@
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.oProducto.Minimo)
                            </td>
                            <td>
                                @{ string cantidad = item.Cantidad.ToString().Replace(",", ".");
                                }
                                @cantidad
                            </td>
                            <td>
                                @{
                                    decimal resultado = item.Cantidad - item.CantidadReservada;

                                    string cantidadReservada = resultado.ToString().Replace(",", ".");
                                }
                                @cantidadReservada
                            </td>
                            <td>
                                @{
                                    string cantidadDisponible = item.CantidadReservada.ToString().Replace(",", ".");
                                }
                                @cantidadDisponible
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.oProducto.Marca.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.oProducto.TipoDuracion.Nombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.oProducto.TipoProducto.Nombre)
                            </td>
                            <td>
                                <a href="@(Url.Action("Edit", new { id = item.oProducto.ProductoId }))" class="btn btn-sm btn-success" title="Editar Producto"><i class="fas fa-edit"></i></a>
                                <button class="btn btn-sm btn-primary"
                                        data-toggle="modal"
                                        data-backdrop="true"
                                        data-target="#modalDatos"
                                        data-url="@(Url.Action("Details",new { id=item.oProducto.ProductoId }))"
                                        onclick="abrirModal(this)"
                                        title="Ver + Info">
                                    <i class="far fa-eye"></i>
                                </button>
                                <button class="btn btn-sm btn-danger"
                                        onclick="eliminar(@item.oProducto.ProductoId)"
                                        title="Eliminar">
                                    <i class="far fa-trash-alt"></i>
                                </button>
                                <a href="@(Url.Action("AltaStock", new { id = item.oProducto.ProductoId, tipoStock = 1 }))" class="btn btn-sm btn-info" title="Ver Stock"><i class="fas fa-chart-line"></i></a>
                                <a href="@(Url.Action("Create", "Precios", new { ProductoId = item.oProducto.ProductoId, ComboId = 0 }))" class="btn btn-sm btn-warning" title="Ver Precios"><i class="fas fa-hand-holding-usd"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <hr />
            <div class="alert alert-danger">
                <p>No existen registros.</p>
            </div>
        }
    </div>
</div>

@section scripts{

    <script type="text/javascript">

        function eliminar(id) {

            Swal.fire({
                title: 'Seguro desea eliminar?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, eliminar!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    eliminacionConfirmada(id);
                }
            });


        }

        function eliminacionConfirmada(id) {
            $.ajax({
                url: "@(Url.Action("Delete"))",
                type: "POST",
                beforeSend: function () {
                    $("#preloader").fadeIn(5);
                },
                complete: function () {
                    $("#preloader").fadeOut("slow");
                },
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.Success) {
                        Swal.fire(
                            'Eliminado!',
                            'El producto fue eliminado.',
                            'success'
                        ).then((result) => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Ocurrió un Error!'
                        }).then((result) => {
                            location.reload();
                        });
                    }
                    //recargar pagina
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Ocurrió un Error!',
                        text: errorThrown
                    }).then((result) => {
                        location.reload();
                    });

                    //recargar pagina
                }
            });
        }

    </script>

}