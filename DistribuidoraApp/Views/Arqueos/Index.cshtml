@model IEnumerable<Negocio.entidades.Arqueo>

@{
    ViewBag.Title = "Arqueos";
}

<div class="row">
    <div class="col-md-12">
        <h2>Listado de Arqueos</h2>
        <hr />
        <p>
            @Html.ActionLink("Volver al Inicio", "Index", "Home", null, new { @class = "btn btn-outline btn-warning pull-right" })
        </p>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        @if (Model.Count() > 0)
        {
            <hr />
            <table class="table table-striped table-bordered datatable" data-excel="true" data-pdf="true" data-imprimir="true">
                <tr>
                    <td>
                        Id
                    </td>
                    <th>
                        Fecha Inicio
                    </th>
                    <th>
                        Hora Inicio
                    </th>
                    <th>
                        Fecha Fin
                    </th>
                    <th>
                        Hora Fin
                    </th>
                    <th>
                        Total
                    </th>
                    <th>
                        Abierto
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.ArqueoId)</td>
                        <td>
                            @{ string parameterValue = item.FechaInicio.ToString("dd-MM-yyyy"); } @Html.DisplayFor(modelItem => parameterValue)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HoraInicio)
                        </td>
                        <td>
                            @{
                                string parameterValue1 = "";
                                if (item.FechaFin != null)
                                {
                                    parameterValue1 = item.FechaFin.Value.ToString("dd-MM-yyyy");
                                }
                            } @Html.DisplayFor(modelItem => parameterValue1)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HoraFin)
                        </td>
                        <td>
                            @{ string total = item.Total.ToString().Replace(",", ".");
                            }
                            $@total
                            @*$@Html.DisplayFor(modelItem => item.Total)*@
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Abierto)
                        </td>
                        <td>
                            <a href="@(Url.Action("Details",new { id=item.ArqueoId}))" class="btn btn-sm btn-info" target="_blank" title="+ Info"><i class="fas fa-eye"></i></a>

                            <a href="@(Url.Action("Reporte", "Arqueos", new { id = item.ArqueoId }))" class="btn btn-sm btn-warning" target="_blank" title="Recibo"><i class="fas fa-file-pdf"></i></a>
                            <button class="btn btn-sm btn-danger"
                                    onclick="eliminar(@item.ArqueoId)"
                                    title="Eliminar">
                                <i class="far fa-trash-alt"></i>
                            </button>
                        </td>
                    </tr>
                }

            </table>
        }
        else
        {
            <hr />
            <div class="alert alert-danger">
                <p>No existen registros.</p>
            </div>
        }
    </div>
</div>

@section scripts{

    <script type="text/javascript">
        function abrirModal(e) {
            $("#modal-body-datos").html("");
            var url = $(e).attr("data-url");
            if (url !== null) {
                $("#modal-body-datos").load(url, function (response, status, xhr) {
                    console.log(status, xhr);
                    if (status === "error") {
                        $("#modalDatos").modal('hide');
                        switch (xhr.status) {
                            case 408:
                                toastr.warning(xhr.statusText, "Advertencia.");
                                break;
                            default:
                                alert(xhr.statusText);
                                break;
                        }
                        return;
                    }
                });
            }
        }
    </script>

    <script type="text/javascript">

        function eliminar(id) {

            Swal.fire({
                title: 'Seguro desea eliminar?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, eliminar!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    eliminacionConfirmada(id);
                }
            });


        }

        function eliminacionConfirmada(id) {
            $.ajax({
                url: "@(Url.Action("Delete"))",
                type: "POST",
                beforeSend: function () {
                    $("#preloader").fadeIn(5);
                },
                complete: function () {
                    $("#preloader").fadeOut("slow");
                },
                data: {
                    id: id
                },
                success: function (data) {
                    if (data.Success) {
                        Swal.fire(
                            'Eliminado!',
                            'El arqueo fue eliminado.',
                            'success'
                        ).then((result) => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Ocurrió un Error!'
                        }).then((result) => {
                            location.reload();
                        });
                    }
                    //recargar pagina
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Ocurrió un Error!',
                        text: errorThrown
                    }).then((result) => {
                        location.reload();
                    });
                    //recargar pagina
                }
            });
        }

    </script>

}